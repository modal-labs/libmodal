// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: modal_proto/sandbox_router.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SandboxExecStderrConfig int32

const (
	// The output will be discarded.
	SandboxExecStderrConfig_SANDBOX_EXEC_STDERR_CONFIG_DEVNULL SandboxExecStderrConfig = 0
	// The output will be streamed to the client.
	SandboxExecStderrConfig_SANDBOX_EXEC_STDERR_CONFIG_PIPE SandboxExecStderrConfig = 1
	// A special value that can be used to indicate that the stderr stream should
	// be merged with the stdout stream.
	SandboxExecStderrConfig_SANDBOX_EXEC_STDERR_CONFIG_STDOUT SandboxExecStderrConfig = 2
)

// Enum value maps for SandboxExecStderrConfig.
var (
	SandboxExecStderrConfig_name = map[int32]string{
		0: "SANDBOX_EXEC_STDERR_CONFIG_DEVNULL",
		1: "SANDBOX_EXEC_STDERR_CONFIG_PIPE",
		2: "SANDBOX_EXEC_STDERR_CONFIG_STDOUT",
	}
	SandboxExecStderrConfig_value = map[string]int32{
		"SANDBOX_EXEC_STDERR_CONFIG_DEVNULL": 0,
		"SANDBOX_EXEC_STDERR_CONFIG_PIPE":    1,
		"SANDBOX_EXEC_STDERR_CONFIG_STDOUT":  2,
	}
)

func (x SandboxExecStderrConfig) Enum() *SandboxExecStderrConfig {
	p := new(SandboxExecStderrConfig)
	*p = x
	return p
}

func (x SandboxExecStderrConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxExecStderrConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_modal_proto_sandbox_router_proto_enumTypes[0].Descriptor()
}

func (SandboxExecStderrConfig) Type() protoreflect.EnumType {
	return &file_modal_proto_sandbox_router_proto_enumTypes[0]
}

func (x SandboxExecStderrConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type SandboxExecStdioFileDescriptor int32

const (
	// Read from stdout.
	SandboxExecStdioFileDescriptor_SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDOUT SandboxExecStdioFileDescriptor = 0
	// Read from stderr.
	SandboxExecStdioFileDescriptor_SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDERR SandboxExecStdioFileDescriptor = 1
)

// Enum value maps for SandboxExecStdioFileDescriptor.
var (
	SandboxExecStdioFileDescriptor_name = map[int32]string{
		0: "SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDOUT",
		1: "SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDERR",
	}
	SandboxExecStdioFileDescriptor_value = map[string]int32{
		"SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDOUT": 0,
		"SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDERR": 1,
	}
)

func (x SandboxExecStdioFileDescriptor) Enum() *SandboxExecStdioFileDescriptor {
	p := new(SandboxExecStdioFileDescriptor)
	*p = x
	return p
}

func (x SandboxExecStdioFileDescriptor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxExecStdioFileDescriptor) Descriptor() protoreflect.EnumDescriptor {
	return file_modal_proto_sandbox_router_proto_enumTypes[1].Descriptor()
}

func (SandboxExecStdioFileDescriptor) Type() protoreflect.EnumType {
	return &file_modal_proto_sandbox_router_proto_enumTypes[1]
}

func (x SandboxExecStdioFileDescriptor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type SandboxExecStdoutConfig int32

const (
	// The output will be discarded.
	SandboxExecStdoutConfig_SANDBOX_EXEC_STDOUT_CONFIG_DEVNULL SandboxExecStdoutConfig = 0
	// The output will be streamed to the client.
	SandboxExecStdoutConfig_SANDBOX_EXEC_STDOUT_CONFIG_PIPE SandboxExecStdoutConfig = 1
)

// Enum value maps for SandboxExecStdoutConfig.
var (
	SandboxExecStdoutConfig_name = map[int32]string{
		0: "SANDBOX_EXEC_STDOUT_CONFIG_DEVNULL",
		1: "SANDBOX_EXEC_STDOUT_CONFIG_PIPE",
	}
	SandboxExecStdoutConfig_value = map[string]int32{
		"SANDBOX_EXEC_STDOUT_CONFIG_DEVNULL": 0,
		"SANDBOX_EXEC_STDOUT_CONFIG_PIPE":    1,
	}
)

func (x SandboxExecStdoutConfig) Enum() *SandboxExecStdoutConfig {
	p := new(SandboxExecStdoutConfig)
	*p = x
	return p
}

func (x SandboxExecStdoutConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxExecStdoutConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_modal_proto_sandbox_router_proto_enumTypes[2].Descriptor()
}

func (SandboxExecStdoutConfig) Type() protoreflect.EnumType {
	return &file_modal_proto_sandbox_router_proto_enumTypes[2]
}

func (x SandboxExecStdoutConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type SandboxExecPollRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TaskId string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3"`
	xxx_hidden_ExecId string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SandboxExecPollRequest) Reset() {
	*x = SandboxExecPollRequest{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecPollRequest) ProtoMessage() {}

func (x *SandboxExecPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecPollRequest) GetTaskId() string {
	if x != nil {
		return x.xxx_hidden_TaskId
	}
	return ""
}

func (x *SandboxExecPollRequest) GetExecId() string {
	if x != nil {
		return x.xxx_hidden_ExecId
	}
	return ""
}

func (x *SandboxExecPollRequest) SetTaskId(v string) {
	x.xxx_hidden_TaskId = v
}

func (x *SandboxExecPollRequest) SetExecId(v string) {
	x.xxx_hidden_ExecId = v
}

type SandboxExecPollRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The task ID of the sandbox running the exec'd command.
	TaskId string
	// The execution ID of the command to wait on.
	ExecId string
}

func (b0 SandboxExecPollRequest_builder) Build() *SandboxExecPollRequest {
	m0 := &SandboxExecPollRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TaskId = b.TaskId
	x.xxx_hidden_ExecId = b.ExecId
	return m0
}

// The response to a SandboxExecPollRequest. If the exec'd command has not
// completed, exit_status will be unset.
type SandboxExecPollResponse struct {
	state                 protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_ExitStatus isSandboxExecPollResponse_ExitStatus `protobuf_oneof:"exit_status"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SandboxExecPollResponse) Reset() {
	*x = SandboxExecPollResponse{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecPollResponse) ProtoMessage() {}

func (x *SandboxExecPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecPollResponse) GetCode() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_ExitStatus.(*sandboxExecPollResponse_Code); ok {
			return x.Code
		}
	}
	return 0
}

func (x *SandboxExecPollResponse) GetSignal() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_ExitStatus.(*sandboxExecPollResponse_Signal); ok {
			return x.Signal
		}
	}
	return 0
}

func (x *SandboxExecPollResponse) SetCode(v int32) {
	x.xxx_hidden_ExitStatus = &sandboxExecPollResponse_Code{v}
}

func (x *SandboxExecPollResponse) SetSignal(v int32) {
	x.xxx_hidden_ExitStatus = &sandboxExecPollResponse_Signal{v}
}

func (x *SandboxExecPollResponse) HasExitStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExitStatus != nil
}

func (x *SandboxExecPollResponse) HasCode() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ExitStatus.(*sandboxExecPollResponse_Code)
	return ok
}

func (x *SandboxExecPollResponse) HasSignal() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ExitStatus.(*sandboxExecPollResponse_Signal)
	return ok
}

func (x *SandboxExecPollResponse) ClearExitStatus() {
	x.xxx_hidden_ExitStatus = nil
}

func (x *SandboxExecPollResponse) ClearCode() {
	if _, ok := x.xxx_hidden_ExitStatus.(*sandboxExecPollResponse_Code); ok {
		x.xxx_hidden_ExitStatus = nil
	}
}

func (x *SandboxExecPollResponse) ClearSignal() {
	if _, ok := x.xxx_hidden_ExitStatus.(*sandboxExecPollResponse_Signal); ok {
		x.xxx_hidden_ExitStatus = nil
	}
}

const SandboxExecPollResponse_ExitStatus_not_set_case case_SandboxExecPollResponse_ExitStatus = 0
const SandboxExecPollResponse_Code_case case_SandboxExecPollResponse_ExitStatus = 1
const SandboxExecPollResponse_Signal_case case_SandboxExecPollResponse_ExitStatus = 2

func (x *SandboxExecPollResponse) WhichExitStatus() case_SandboxExecPollResponse_ExitStatus {
	if x == nil {
		return SandboxExecPollResponse_ExitStatus_not_set_case
	}
	switch x.xxx_hidden_ExitStatus.(type) {
	case *sandboxExecPollResponse_Code:
		return SandboxExecPollResponse_Code_case
	case *sandboxExecPollResponse_Signal:
		return SandboxExecPollResponse_Signal_case
	default:
		return SandboxExecPollResponse_ExitStatus_not_set_case
	}
}

type SandboxExecPollResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_ExitStatus:
	// The exit code of the command.
	Code *int32
	// The signal that terminated the command.
	Signal *int32
	// -- end of xxx_hidden_ExitStatus
}

func (b0 SandboxExecPollResponse_builder) Build() *SandboxExecPollResponse {
	m0 := &SandboxExecPollResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Code != nil {
		x.xxx_hidden_ExitStatus = &sandboxExecPollResponse_Code{*b.Code}
	}
	if b.Signal != nil {
		x.xxx_hidden_ExitStatus = &sandboxExecPollResponse_Signal{*b.Signal}
	}
	return m0
}

type case_SandboxExecPollResponse_ExitStatus protoreflect.FieldNumber

func (x case_SandboxExecPollResponse_ExitStatus) String() string {
	md := file_modal_proto_sandbox_router_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSandboxExecPollResponse_ExitStatus interface {
	isSandboxExecPollResponse_ExitStatus()
}

type sandboxExecPollResponse_Code struct {
	// The exit code of the command.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3,oneof"`
}

type sandboxExecPollResponse_Signal struct {
	// The signal that terminated the command.
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3,oneof"`
}

func (*sandboxExecPollResponse_Code) isSandboxExecPollResponse_ExitStatus() {}

func (*sandboxExecPollResponse_Signal) isSandboxExecPollResponse_ExitStatus() {}

type SandboxExecStartRequest struct {
	state                   protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_TaskId       string                  `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3"`
	xxx_hidden_ExecId       string                  `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3"`
	xxx_hidden_CommandArgs  []string                `protobuf:"bytes,3,rep,name=command_args,json=commandArgs,proto3"`
	xxx_hidden_StdoutConfig SandboxExecStdoutConfig `protobuf:"varint,4,opt,name=stdout_config,json=stdoutConfig,proto3,enum=modal.sandbox_router.SandboxExecStdoutConfig"`
	xxx_hidden_StderrConfig SandboxExecStderrConfig `protobuf:"varint,5,opt,name=stderr_config,json=stderrConfig,proto3,enum=modal.sandbox_router.SandboxExecStderrConfig"`
	xxx_hidden_TimeoutSecs  uint32                  `protobuf:"varint,6,opt,name=timeout_secs,json=timeoutSecs,proto3,oneof"`
	xxx_hidden_Workdir      *string                 `protobuf:"bytes,7,opt,name=workdir,proto3,oneof"`
	xxx_hidden_SecretIds    []string                `protobuf:"bytes,8,rep,name=secret_ids,json=secretIds,proto3"`
	xxx_hidden_PtyInfo      *PTYInfo                `protobuf:"bytes,9,opt,name=pty_info,json=ptyInfo,proto3,oneof"`
	xxx_hidden_RuntimeDebug bool                    `protobuf:"varint,10,opt,name=runtime_debug,json=runtimeDebug,proto3"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SandboxExecStartRequest) Reset() {
	*x = SandboxExecStartRequest{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecStartRequest) ProtoMessage() {}

func (x *SandboxExecStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecStartRequest) GetTaskId() string {
	if x != nil {
		return x.xxx_hidden_TaskId
	}
	return ""
}

func (x *SandboxExecStartRequest) GetExecId() string {
	if x != nil {
		return x.xxx_hidden_ExecId
	}
	return ""
}

func (x *SandboxExecStartRequest) GetCommandArgs() []string {
	if x != nil {
		return x.xxx_hidden_CommandArgs
	}
	return nil
}

func (x *SandboxExecStartRequest) GetStdoutConfig() SandboxExecStdoutConfig {
	if x != nil {
		return x.xxx_hidden_StdoutConfig
	}
	return SandboxExecStdoutConfig_SANDBOX_EXEC_STDOUT_CONFIG_DEVNULL
}

func (x *SandboxExecStartRequest) GetStderrConfig() SandboxExecStderrConfig {
	if x != nil {
		return x.xxx_hidden_StderrConfig
	}
	return SandboxExecStderrConfig_SANDBOX_EXEC_STDERR_CONFIG_DEVNULL
}

func (x *SandboxExecStartRequest) GetTimeoutSecs() uint32 {
	if x != nil {
		return x.xxx_hidden_TimeoutSecs
	}
	return 0
}

func (x *SandboxExecStartRequest) GetWorkdir() string {
	if x != nil {
		if x.xxx_hidden_Workdir != nil {
			return *x.xxx_hidden_Workdir
		}
		return ""
	}
	return ""
}

func (x *SandboxExecStartRequest) GetSecretIds() []string {
	if x != nil {
		return x.xxx_hidden_SecretIds
	}
	return nil
}

func (x *SandboxExecStartRequest) GetPtyInfo() *PTYInfo {
	if x != nil {
		return x.xxx_hidden_PtyInfo
	}
	return nil
}

func (x *SandboxExecStartRequest) GetRuntimeDebug() bool {
	if x != nil {
		return x.xxx_hidden_RuntimeDebug
	}
	return false
}

func (x *SandboxExecStartRequest) SetTaskId(v string) {
	x.xxx_hidden_TaskId = v
}

func (x *SandboxExecStartRequest) SetExecId(v string) {
	x.xxx_hidden_ExecId = v
}

func (x *SandboxExecStartRequest) SetCommandArgs(v []string) {
	x.xxx_hidden_CommandArgs = v
}

func (x *SandboxExecStartRequest) SetStdoutConfig(v SandboxExecStdoutConfig) {
	x.xxx_hidden_StdoutConfig = v
}

func (x *SandboxExecStartRequest) SetStderrConfig(v SandboxExecStderrConfig) {
	x.xxx_hidden_StderrConfig = v
}

func (x *SandboxExecStartRequest) SetTimeoutSecs(v uint32) {
	x.xxx_hidden_TimeoutSecs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *SandboxExecStartRequest) SetWorkdir(v string) {
	x.xxx_hidden_Workdir = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *SandboxExecStartRequest) SetSecretIds(v []string) {
	x.xxx_hidden_SecretIds = v
}

func (x *SandboxExecStartRequest) SetPtyInfo(v *PTYInfo) {
	x.xxx_hidden_PtyInfo = v
}

func (x *SandboxExecStartRequest) SetRuntimeDebug(v bool) {
	x.xxx_hidden_RuntimeDebug = v
}

func (x *SandboxExecStartRequest) HasTimeoutSecs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SandboxExecStartRequest) HasWorkdir() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *SandboxExecStartRequest) HasPtyInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PtyInfo != nil
}

func (x *SandboxExecStartRequest) ClearTimeoutSecs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_TimeoutSecs = 0
}

func (x *SandboxExecStartRequest) ClearWorkdir() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Workdir = nil
}

func (x *SandboxExecStartRequest) ClearPtyInfo() {
	x.xxx_hidden_PtyInfo = nil
}

type SandboxExecStartRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The task ID of the sandbox to execute the command in.
	TaskId string
	// Execution ID. This ID will be used to identify the execution for other
	// requests and ensure exec commands are idempotent.
	//
	// TODO(saltzm): Could instead have a separate idempotency key from the exec_id
	// like present day, and have the server generate the exec_id and return it in
	// the ExecStartResponse.
	ExecId string
	// Command arguments to execute.
	CommandArgs []string
	// Configures how the stdout of the command will be handled.
	StdoutConfig SandboxExecStdoutConfig
	// Configures how the stderr of the command will be handled.
	StderrConfig SandboxExecStderrConfig
	// Timeout in seconds for the exec'd command to exit. If the command does not
	// exit within this duration, the command will be killed. This is NOT the
	// timeout for the ExecStartRequest RPC to complete.
	TimeoutSecs *uint32
	// Working directory for the command.
	Workdir *string
	// Secret IDs to mount into the sandbox.
	SecretIds []string
	// PTY info for the command.
	PtyInfo *PTYInfo
	// Enable debugging capabilities on the container runtime. Used only for
	// internal debugging.
	RuntimeDebug bool
}

func (b0 SandboxExecStartRequest_builder) Build() *SandboxExecStartRequest {
	m0 := &SandboxExecStartRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TaskId = b.TaskId
	x.xxx_hidden_ExecId = b.ExecId
	x.xxx_hidden_CommandArgs = b.CommandArgs
	x.xxx_hidden_StdoutConfig = b.StdoutConfig
	x.xxx_hidden_StderrConfig = b.StderrConfig
	if b.TimeoutSecs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_TimeoutSecs = *b.TimeoutSecs
	}
	if b.Workdir != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_Workdir = b.Workdir
	}
	x.xxx_hidden_SecretIds = b.SecretIds
	x.xxx_hidden_PtyInfo = b.PtyInfo
	x.xxx_hidden_RuntimeDebug = b.RuntimeDebug
	return m0
}

type SandboxExecStartResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SandboxExecStartResponse) Reset() {
	*x = SandboxExecStartResponse{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecStartResponse) ProtoMessage() {}

func (x *SandboxExecStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SandboxExecStartResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SandboxExecStartResponse_builder) Build() *SandboxExecStartResponse {
	m0 := &SandboxExecStartResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type SandboxExecStdinWriteRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TaskId string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3"`
	xxx_hidden_ExecId string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3"`
	xxx_hidden_Offset uint64                 `protobuf:"varint,3,opt,name=offset,proto3"`
	xxx_hidden_Data   []byte                 `protobuf:"bytes,4,opt,name=data,proto3"`
	xxx_hidden_Eof    bool                   `protobuf:"varint,5,opt,name=eof,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SandboxExecStdinWriteRequest) Reset() {
	*x = SandboxExecStdinWriteRequest{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecStdinWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecStdinWriteRequest) ProtoMessage() {}

func (x *SandboxExecStdinWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecStdinWriteRequest) GetTaskId() string {
	if x != nil {
		return x.xxx_hidden_TaskId
	}
	return ""
}

func (x *SandboxExecStdinWriteRequest) GetExecId() string {
	if x != nil {
		return x.xxx_hidden_ExecId
	}
	return ""
}

func (x *SandboxExecStdinWriteRequest) GetOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *SandboxExecStdinWriteRequest) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *SandboxExecStdinWriteRequest) GetEof() bool {
	if x != nil {
		return x.xxx_hidden_Eof
	}
	return false
}

func (x *SandboxExecStdinWriteRequest) SetTaskId(v string) {
	x.xxx_hidden_TaskId = v
}

func (x *SandboxExecStdinWriteRequest) SetExecId(v string) {
	x.xxx_hidden_ExecId = v
}

func (x *SandboxExecStdinWriteRequest) SetOffset(v uint64) {
	x.xxx_hidden_Offset = v
}

func (x *SandboxExecStdinWriteRequest) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
}

func (x *SandboxExecStdinWriteRequest) SetEof(v bool) {
	x.xxx_hidden_Eof = v
}

type SandboxExecStdinWriteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The task ID of the sandbox running the exec'd command.
	TaskId string
	// The execution ID of the command to write to.
	ExecId string
	// The offset to start writing to. This is used to resume writing from the
	// last write position if the connection is closed and reopened.
	Offset uint64
	Data   []byte
	// If true, close the stdin stream after writing any provided data.
	// This signals EOF to the exec'd process.
	Eof bool
}

func (b0 SandboxExecStdinWriteRequest_builder) Build() *SandboxExecStdinWriteRequest {
	m0 := &SandboxExecStdinWriteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TaskId = b.TaskId
	x.xxx_hidden_ExecId = b.ExecId
	x.xxx_hidden_Offset = b.Offset
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_Eof = b.Eof
	return m0
}

type SandboxExecStdinWriteResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SandboxExecStdinWriteResponse) Reset() {
	*x = SandboxExecStdinWriteResponse{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecStdinWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecStdinWriteResponse) ProtoMessage() {}

func (x *SandboxExecStdinWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SandboxExecStdinWriteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SandboxExecStdinWriteResponse_builder) Build() *SandboxExecStdinWriteResponse {
	m0 := &SandboxExecStdinWriteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type SandboxExecStdioReadRequest struct {
	state                     protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_TaskId         string                         `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3"`
	xxx_hidden_ExecId         string                         `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3"`
	xxx_hidden_Offset         uint64                         `protobuf:"varint,3,opt,name=offset,proto3"`
	xxx_hidden_FileDescriptor SandboxExecStdioFileDescriptor `protobuf:"varint,4,opt,name=file_descriptor,json=fileDescriptor,proto3,enum=modal.sandbox_router.SandboxExecStdioFileDescriptor"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SandboxExecStdioReadRequest) Reset() {
	*x = SandboxExecStdioReadRequest{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecStdioReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecStdioReadRequest) ProtoMessage() {}

func (x *SandboxExecStdioReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecStdioReadRequest) GetTaskId() string {
	if x != nil {
		return x.xxx_hidden_TaskId
	}
	return ""
}

func (x *SandboxExecStdioReadRequest) GetExecId() string {
	if x != nil {
		return x.xxx_hidden_ExecId
	}
	return ""
}

func (x *SandboxExecStdioReadRequest) GetOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *SandboxExecStdioReadRequest) GetFileDescriptor() SandboxExecStdioFileDescriptor {
	if x != nil {
		return x.xxx_hidden_FileDescriptor
	}
	return SandboxExecStdioFileDescriptor_SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDOUT
}

func (x *SandboxExecStdioReadRequest) SetTaskId(v string) {
	x.xxx_hidden_TaskId = v
}

func (x *SandboxExecStdioReadRequest) SetExecId(v string) {
	x.xxx_hidden_ExecId = v
}

func (x *SandboxExecStdioReadRequest) SetOffset(v uint64) {
	x.xxx_hidden_Offset = v
}

func (x *SandboxExecStdioReadRequest) SetFileDescriptor(v SandboxExecStdioFileDescriptor) {
	x.xxx_hidden_FileDescriptor = v
}

type SandboxExecStdioReadRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The task ID of the sandbox running the exec'd command.
	TaskId string
	// The execution ID of the command to read from.
	ExecId string
	// The offset to start reading from. This is used to resume reading from the
	// last read position if the connection is closed and reopened.
	Offset uint64
	// Which file descriptor to read from.
	FileDescriptor SandboxExecStdioFileDescriptor
}

func (b0 SandboxExecStdioReadRequest_builder) Build() *SandboxExecStdioReadRequest {
	m0 := &SandboxExecStdioReadRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TaskId = b.TaskId
	x.xxx_hidden_ExecId = b.ExecId
	x.xxx_hidden_Offset = b.Offset
	x.xxx_hidden_FileDescriptor = b.FileDescriptor
	return m0
}

type SandboxExecStdioReadResponse struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data []byte                 `protobuf:"bytes,1,opt,name=data,proto3"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SandboxExecStdioReadResponse) Reset() {
	*x = SandboxExecStdioReadResponse{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecStdioReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecStdioReadResponse) ProtoMessage() {}

func (x *SandboxExecStdioReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecStdioReadResponse) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *SandboxExecStdioReadResponse) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
}

type SandboxExecStdioReadResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The data read from the file descriptor.
	Data []byte
}

func (b0 SandboxExecStdioReadResponse_builder) Build() *SandboxExecStdioReadResponse {
	m0 := &SandboxExecStdioReadResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Data = b.Data
	return m0
}

type SandboxExecWaitRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TaskId string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3"`
	xxx_hidden_ExecId string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SandboxExecWaitRequest) Reset() {
	*x = SandboxExecWaitRequest{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecWaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecWaitRequest) ProtoMessage() {}

func (x *SandboxExecWaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecWaitRequest) GetTaskId() string {
	if x != nil {
		return x.xxx_hidden_TaskId
	}
	return ""
}

func (x *SandboxExecWaitRequest) GetExecId() string {
	if x != nil {
		return x.xxx_hidden_ExecId
	}
	return ""
}

func (x *SandboxExecWaitRequest) SetTaskId(v string) {
	x.xxx_hidden_TaskId = v
}

func (x *SandboxExecWaitRequest) SetExecId(v string) {
	x.xxx_hidden_ExecId = v
}

type SandboxExecWaitRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The task ID of the sandbox running the exec'd command.
	TaskId string
	// The execution ID of the command to wait on.
	ExecId string
}

func (b0 SandboxExecWaitRequest_builder) Build() *SandboxExecWaitRequest {
	m0 := &SandboxExecWaitRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TaskId = b.TaskId
	x.xxx_hidden_ExecId = b.ExecId
	return m0
}

type SandboxExecWaitResponse struct {
	state                 protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_ExitStatus isSandboxExecWaitResponse_ExitStatus `protobuf_oneof:"exit_status"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SandboxExecWaitResponse) Reset() {
	*x = SandboxExecWaitResponse{}
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxExecWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxExecWaitResponse) ProtoMessage() {}

func (x *SandboxExecWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modal_proto_sandbox_router_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SandboxExecWaitResponse) GetCode() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_ExitStatus.(*sandboxExecWaitResponse_Code); ok {
			return x.Code
		}
	}
	return 0
}

func (x *SandboxExecWaitResponse) GetSignal() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_ExitStatus.(*sandboxExecWaitResponse_Signal); ok {
			return x.Signal
		}
	}
	return 0
}

func (x *SandboxExecWaitResponse) SetCode(v int32) {
	x.xxx_hidden_ExitStatus = &sandboxExecWaitResponse_Code{v}
}

func (x *SandboxExecWaitResponse) SetSignal(v int32) {
	x.xxx_hidden_ExitStatus = &sandboxExecWaitResponse_Signal{v}
}

func (x *SandboxExecWaitResponse) HasExitStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExitStatus != nil
}

func (x *SandboxExecWaitResponse) HasCode() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ExitStatus.(*sandboxExecWaitResponse_Code)
	return ok
}

func (x *SandboxExecWaitResponse) HasSignal() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ExitStatus.(*sandboxExecWaitResponse_Signal)
	return ok
}

func (x *SandboxExecWaitResponse) ClearExitStatus() {
	x.xxx_hidden_ExitStatus = nil
}

func (x *SandboxExecWaitResponse) ClearCode() {
	if _, ok := x.xxx_hidden_ExitStatus.(*sandboxExecWaitResponse_Code); ok {
		x.xxx_hidden_ExitStatus = nil
	}
}

func (x *SandboxExecWaitResponse) ClearSignal() {
	if _, ok := x.xxx_hidden_ExitStatus.(*sandboxExecWaitResponse_Signal); ok {
		x.xxx_hidden_ExitStatus = nil
	}
}

const SandboxExecWaitResponse_ExitStatus_not_set_case case_SandboxExecWaitResponse_ExitStatus = 0
const SandboxExecWaitResponse_Code_case case_SandboxExecWaitResponse_ExitStatus = 1
const SandboxExecWaitResponse_Signal_case case_SandboxExecWaitResponse_ExitStatus = 2

func (x *SandboxExecWaitResponse) WhichExitStatus() case_SandboxExecWaitResponse_ExitStatus {
	if x == nil {
		return SandboxExecWaitResponse_ExitStatus_not_set_case
	}
	switch x.xxx_hidden_ExitStatus.(type) {
	case *sandboxExecWaitResponse_Code:
		return SandboxExecWaitResponse_Code_case
	case *sandboxExecWaitResponse_Signal:
		return SandboxExecWaitResponse_Signal_case
	default:
		return SandboxExecWaitResponse_ExitStatus_not_set_case
	}
}

type SandboxExecWaitResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_ExitStatus:
	// The exit code of the command.
	Code *int32
	// The signal that terminated the command.
	Signal *int32
	// -- end of xxx_hidden_ExitStatus
}

func (b0 SandboxExecWaitResponse_builder) Build() *SandboxExecWaitResponse {
	m0 := &SandboxExecWaitResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Code != nil {
		x.xxx_hidden_ExitStatus = &sandboxExecWaitResponse_Code{*b.Code}
	}
	if b.Signal != nil {
		x.xxx_hidden_ExitStatus = &sandboxExecWaitResponse_Signal{*b.Signal}
	}
	return m0
}

type case_SandboxExecWaitResponse_ExitStatus protoreflect.FieldNumber

func (x case_SandboxExecWaitResponse_ExitStatus) String() string {
	md := file_modal_proto_sandbox_router_proto_msgTypes[9].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSandboxExecWaitResponse_ExitStatus interface {
	isSandboxExecWaitResponse_ExitStatus()
}

type sandboxExecWaitResponse_Code struct {
	// The exit code of the command.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3,oneof"`
}

type sandboxExecWaitResponse_Signal struct {
	// The signal that terminated the command.
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3,oneof"`
}

func (*sandboxExecWaitResponse_Code) isSandboxExecWaitResponse_ExitStatus() {}

func (*sandboxExecWaitResponse_Signal) isSandboxExecWaitResponse_ExitStatus() {}

var File_modal_proto_sandbox_router_proto protoreflect.FileDescriptor

const file_modal_proto_sandbox_router_proto_rawDesc = "" +
	"\n" +
	" modal_proto/sandbox_router.proto\x12\x14modal.sandbox_router\x1a\x15modal_proto/api.proto\"J\n" +
	"\x16SandboxExecPollRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"X\n" +
	"\x17SandboxExecPollResponse\x12\x14\n" +
	"\x04code\x18\x01 \x01(\x05H\x00R\x04code\x12\x18\n" +
	"\x06signal\x18\x02 \x01(\x05H\x00R\x06signalB\r\n" +
	"\vexit_status\"\x82\x04\n" +
	"\x17SandboxExecStartRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12!\n" +
	"\fcommand_args\x18\x03 \x03(\tR\vcommandArgs\x12R\n" +
	"\rstdout_config\x18\x04 \x01(\x0e2-.modal.sandbox_router.SandboxExecStdoutConfigR\fstdoutConfig\x12R\n" +
	"\rstderr_config\x18\x05 \x01(\x0e2-.modal.sandbox_router.SandboxExecStderrConfigR\fstderrConfig\x12&\n" +
	"\ftimeout_secs\x18\x06 \x01(\rH\x00R\vtimeoutSecs\x88\x01\x01\x12\x1d\n" +
	"\aworkdir\x18\a \x01(\tH\x01R\aworkdir\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"secret_ids\x18\b \x03(\tR\tsecretIds\x125\n" +
	"\bpty_info\x18\t \x01(\v2\x15.modal.client.PTYInfoH\x02R\aptyInfo\x88\x01\x01\x12#\n" +
	"\rruntime_debug\x18\n" +
	" \x01(\bR\fruntimeDebugB\x0f\n" +
	"\r_timeout_secsB\n" +
	"\n" +
	"\b_workdirB\v\n" +
	"\t_pty_info\"\x1a\n" +
	"\x18SandboxExecStartResponse\"\x8e\x01\n" +
	"\x1cSandboxExecStdinWriteRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x04R\x06offset\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x10\n" +
	"\x03eof\x18\x05 \x01(\bR\x03eof\"\x1f\n" +
	"\x1dSandboxExecStdinWriteResponse\"\xc6\x01\n" +
	"\x1bSandboxExecStdioReadRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x04R\x06offset\x12]\n" +
	"\x0ffile_descriptor\x18\x04 \x01(\x0e24.modal.sandbox_router.SandboxExecStdioFileDescriptorR\x0efileDescriptor\"2\n" +
	"\x1cSandboxExecStdioReadResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"J\n" +
	"\x16SandboxExecWaitRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"X\n" +
	"\x17SandboxExecWaitResponse\x12\x14\n" +
	"\x04code\x18\x01 \x01(\x05H\x00R\x04code\x12\x18\n" +
	"\x06signal\x18\x02 \x01(\x05H\x00R\x06signalB\r\n" +
	"\vexit_status*\x8d\x01\n" +
	"\x17SandboxExecStderrConfig\x12&\n" +
	"\"SANDBOX_EXEC_STDERR_CONFIG_DEVNULL\x10\x00\x12#\n" +
	"\x1fSANDBOX_EXEC_STDERR_CONFIG_PIPE\x10\x01\x12%\n" +
	"!SANDBOX_EXEC_STDERR_CONFIG_STDOUT\x10\x02*~\n" +
	"\x1eSandboxExecStdioFileDescriptor\x12-\n" +
	")SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDOUT\x10\x00\x12-\n" +
	")SANDBOX_EXEC_STDIO_FILE_DESCRIPTOR_STDERR\x10\x01*f\n" +
	"\x17SandboxExecStdoutConfig\x12&\n" +
	"\"SANDBOX_EXEC_STDOUT_CONFIG_DEVNULL\x10\x00\x12#\n" +
	"\x1fSANDBOX_EXEC_STDOUT_CONFIG_PIPE\x10\x012\xe6\x04\n" +
	"\rSandboxRouter\x12n\n" +
	"\x0fSandboxExecPoll\x12,.modal.sandbox_router.SandboxExecPollRequest\x1a-.modal.sandbox_router.SandboxExecPollResponse\x12q\n" +
	"\x10SandboxExecStart\x12-.modal.sandbox_router.SandboxExecStartRequest\x1a..modal.sandbox_router.SandboxExecStartResponse\x12\x80\x01\n" +
	"\x15SandboxExecStdinWrite\x122.modal.sandbox_router.SandboxExecStdinWriteRequest\x1a3.modal.sandbox_router.SandboxExecStdinWriteResponse\x12\x7f\n" +
	"\x14SandboxExecStdioRead\x121.modal.sandbox_router.SandboxExecStdioReadRequest\x1a2.modal.sandbox_router.SandboxExecStdioReadResponse0\x01\x12n\n" +
	"\x0fSandboxExecWait\x12,.modal.sandbox_router.SandboxExecWaitRequest\x1a-.modal.sandbox_router.SandboxExecWaitResponseB&Z$github.com/modal-labs/modal/go/protob\x06proto3"

var file_modal_proto_sandbox_router_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_modal_proto_sandbox_router_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_modal_proto_sandbox_router_proto_goTypes = []any{
	(SandboxExecStderrConfig)(0),          // 0: modal.sandbox_router.SandboxExecStderrConfig
	(SandboxExecStdioFileDescriptor)(0),   // 1: modal.sandbox_router.SandboxExecStdioFileDescriptor
	(SandboxExecStdoutConfig)(0),          // 2: modal.sandbox_router.SandboxExecStdoutConfig
	(*SandboxExecPollRequest)(nil),        // 3: modal.sandbox_router.SandboxExecPollRequest
	(*SandboxExecPollResponse)(nil),       // 4: modal.sandbox_router.SandboxExecPollResponse
	(*SandboxExecStartRequest)(nil),       // 5: modal.sandbox_router.SandboxExecStartRequest
	(*SandboxExecStartResponse)(nil),      // 6: modal.sandbox_router.SandboxExecStartResponse
	(*SandboxExecStdinWriteRequest)(nil),  // 7: modal.sandbox_router.SandboxExecStdinWriteRequest
	(*SandboxExecStdinWriteResponse)(nil), // 8: modal.sandbox_router.SandboxExecStdinWriteResponse
	(*SandboxExecStdioReadRequest)(nil),   // 9: modal.sandbox_router.SandboxExecStdioReadRequest
	(*SandboxExecStdioReadResponse)(nil),  // 10: modal.sandbox_router.SandboxExecStdioReadResponse
	(*SandboxExecWaitRequest)(nil),        // 11: modal.sandbox_router.SandboxExecWaitRequest
	(*SandboxExecWaitResponse)(nil),       // 12: modal.sandbox_router.SandboxExecWaitResponse
	(*PTYInfo)(nil),                       // 13: modal.client.PTYInfo
}
var file_modal_proto_sandbox_router_proto_depIdxs = []int32{
	2,  // 0: modal.sandbox_router.SandboxExecStartRequest.stdout_config:type_name -> modal.sandbox_router.SandboxExecStdoutConfig
	0,  // 1: modal.sandbox_router.SandboxExecStartRequest.stderr_config:type_name -> modal.sandbox_router.SandboxExecStderrConfig
	13, // 2: modal.sandbox_router.SandboxExecStartRequest.pty_info:type_name -> modal.client.PTYInfo
	1,  // 3: modal.sandbox_router.SandboxExecStdioReadRequest.file_descriptor:type_name -> modal.sandbox_router.SandboxExecStdioFileDescriptor
	3,  // 4: modal.sandbox_router.SandboxRouter.SandboxExecPoll:input_type -> modal.sandbox_router.SandboxExecPollRequest
	5,  // 5: modal.sandbox_router.SandboxRouter.SandboxExecStart:input_type -> modal.sandbox_router.SandboxExecStartRequest
	7,  // 6: modal.sandbox_router.SandboxRouter.SandboxExecStdinWrite:input_type -> modal.sandbox_router.SandboxExecStdinWriteRequest
	9,  // 7: modal.sandbox_router.SandboxRouter.SandboxExecStdioRead:input_type -> modal.sandbox_router.SandboxExecStdioReadRequest
	11, // 8: modal.sandbox_router.SandboxRouter.SandboxExecWait:input_type -> modal.sandbox_router.SandboxExecWaitRequest
	4,  // 9: modal.sandbox_router.SandboxRouter.SandboxExecPoll:output_type -> modal.sandbox_router.SandboxExecPollResponse
	6,  // 10: modal.sandbox_router.SandboxRouter.SandboxExecStart:output_type -> modal.sandbox_router.SandboxExecStartResponse
	8,  // 11: modal.sandbox_router.SandboxRouter.SandboxExecStdinWrite:output_type -> modal.sandbox_router.SandboxExecStdinWriteResponse
	10, // 12: modal.sandbox_router.SandboxRouter.SandboxExecStdioRead:output_type -> modal.sandbox_router.SandboxExecStdioReadResponse
	12, // 13: modal.sandbox_router.SandboxRouter.SandboxExecWait:output_type -> modal.sandbox_router.SandboxExecWaitResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_modal_proto_sandbox_router_proto_init() }
func file_modal_proto_sandbox_router_proto_init() {
	if File_modal_proto_sandbox_router_proto != nil {
		return
	}
	file_modal_proto_api_proto_init()
	file_modal_proto_sandbox_router_proto_msgTypes[1].OneofWrappers = []any{
		(*sandboxExecPollResponse_Code)(nil),
		(*sandboxExecPollResponse_Signal)(nil),
	}
	file_modal_proto_sandbox_router_proto_msgTypes[2].OneofWrappers = []any{}
	file_modal_proto_sandbox_router_proto_msgTypes[9].OneofWrappers = []any{
		(*sandboxExecWaitResponse_Code)(nil),
		(*sandboxExecWaitResponse_Signal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_modal_proto_sandbox_router_proto_rawDesc), len(file_modal_proto_sandbox_router_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modal_proto_sandbox_router_proto_goTypes,
		DependencyIndexes: file_modal_proto_sandbox_router_proto_depIdxs,
		EnumInfos:         file_modal_proto_sandbox_router_proto_enumTypes,
		MessageInfos:      file_modal_proto_sandbox_router_proto_msgTypes,
	}.Build()
	File_modal_proto_sandbox_router_proto = out.File
	file_modal_proto_sandbox_router_proto_goTypes = nil
	file_modal_proto_sandbox_router_proto_depIdxs = nil
}
